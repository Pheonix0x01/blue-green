services:
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=${PORT:-3000}
    ports:
      - "8081:3000"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/healthz"]
      interval: 2s
      timeout: 2s
      retries: 2
      start_period: 5s

  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=${PORT:-3000}
    ports:
      - "8082:3000"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/healthz"]
      interval: 2s
      timeout: 2s
      retries: 2
      start_period: 5s

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./entrypoint.sh:/entrypoint.sh:ro
      - nginx_logs:/var/log/nginx  # Shared log volume
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
    networks:
      - app_network
    depends_on:
      app_blue:
        condition: service_healthy
      app_green:
        condition: service_healthy
    entrypoint: ["/entrypoint.sh"]
    restart: unless-stopped

  watcher:
    build:
      context: .
      dockerfile: Dockerfile.watcher
    container_name: log_watcher
    volumes:
      - nginx_logs:/var/log/nginx:ro
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD:-2}
      - WINDOW_SIZE=${WINDOW_SIZE:-200}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC:-300}
      - LOG_FILE=${LOG_FILE:-/var/log/nginx/access.log}
    networks:
      - app_network
    depends_on:
      - nginx
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  nginx_logs: